import java.awt.Component;
import java.awt.Dimension;
import java.awt.Image;
import java.io.File;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.DefaultComboBoxModel;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import java.awt.Color;
import java.awt.Font;
import javax.swing.SwingConstants;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import java.awt.Cursor;

/**
 *
 * @author Genuine
 */
public class FlowInt extends javax.swing.JFrame {
 
    /**
     * Creates new form FlowInt
     */
    public FlowInt() {
    	getContentPane().setBackground(new Color(255, 204, 102));
		setUndecorated(true);
		setPreferredSize(new Dimension(543,600));

        initComponents();
        //Calling method/function to add column header to jtable
        addTableHeader();
    }
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
                           
    private void initComponents() {
 
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextFieldName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel1.setFont(new Font("Segoe Script", Font.PLAIN, 15));
        jLabel1.setHorizontalAlignment(SwingConstants.CENTER);
        buttonAranjament = new javax.swing.JRadioButton();
        buttonAranjament.setBackground(new Color(102, 255, 102));
        buttonBuchet = new javax.swing.JRadioButton();
        buttonBuchet.setBackground(new Color(102, 255, 102));
        boxNatural = new javax.swing.JCheckBox();
        boxNatural.setBackground(new Color(0, 255, 255));
        boxArtificial = new javax.swing.JCheckBox();
        boxArtificial.setBackground(new Color(0, 255, 255));
        jComboBoxExteriors = new javax.swing.JComboBox();
        jComboBoxExteriors.setBackground(new Color(255, 255, 153));
        jComboBoxExteriors.setForeground(new Color(0, 0, 0));
        jComboBoxExteriors.setFont(new Font("Segoe Script", Font.PLAIN, 13));
        jButton1 = new javax.swing.JButton();
        jButton1.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        jButton1.setFont(new Font("Segoe Script", Font.PLAIN, 15));
        jButton1.setBackground(new Color(255, 102, 51));
        jLabelImage = new javax.swing.JLabel();
        jLabelImage.setBackground(Color.WHITE);
        jButtonBrowseImage = new javax.swing.JButton();
        jButtonBrowseImage.setFont(new Font("Segoe Script", Font.PLAIN, 13));
        jButtonBrowseImage.setBackground(new Color(255, 153, 255));
        jButtonBrowseImage.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
 
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
 
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
 
            },
            new String [] {
                "null"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
 
        jTextFieldName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNameActionPerformed(evt);
            }
        });
 
        jLabel1.setText("NUME");
 
        buttonGroup1.add(buttonAranjament);
        buttonAranjament.setText("Aranjament");
 
        buttonGroup1.add(buttonBuchet);
        buttonBuchet.setText("Buchet");
 
        buttonGroup2.add(boxNatural);
        boxNatural.setText("Natural");
 
        buttonGroup2.add(boxArtificial);
        boxArtificial.setText("Artificial");
 
        jComboBoxExteriors.setModel(new DefaultComboBoxModel(new String[] {"In cutie", "In Folie", "In Sticla"}));
 
        jButton1.setText("Adauga");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
 
        jButtonBrowseImage.setText("Browse IMG");
        jButtonBrowseImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBrowseImageActionPerformed(evt);
            }
        });
        
        lblTipul = new JLabel();
        lblTipul.setFont(new Font("Segoe Script", Font.PLAIN, 15));
        lblTipul.setText("Tipul:");
        
        JLabel lblSau = new JLabel();
        lblSau.setHorizontalAlignment(SwingConstants.CENTER);
        lblSau.setText("SAU");
        lblSau.setFont(new Font("Segoe Script", Font.PLAIN, 15));
        
        JLabel lblSau_1 = new JLabel();
        lblSau_1.setHorizontalAlignment(SwingConstants.CENTER);
        lblSau_1.setText("SAU");
        lblSau_1.setFont(new Font("Segoe Script", Font.PLAIN, 15));
        
        JLabel lblExterior = new JLabel();
        lblExterior.setText("Exterior:");
        lblExterior.setFont(new Font("Segoe Script", Font.PLAIN, 15));
        
        lblNewLabel = new JLabel("");
        lblNewLabel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        lblNewLabel.addMouseListener(new MouseAdapter() {
        	@Override
        	public void mouseClicked(MouseEvent arg0) {
        		dispose();
        	}
        });
        lblNewLabel.setHorizontalAlignment(SwingConstants.CENTER);
        lblNewLabel.setIcon(new ImageIcon(FlowInt.class.getResource("/Exit.png")));
        
        label = new JLabel("");
        label.setCursor(Cursor.getPredefinedCursor(Cursor.MOVE_CURSOR));
        label.addMouseMotionListener(new MouseMotionAdapter() {
        	@Override
        	public void mouseDragged(MouseEvent e) {
        		int cordonataX = e.getXOnScreen();
				int cordonataY = e.getYOnScreen();
				setLocation(cordonataX, cordonataY); 
        	}
        });
        label.setHorizontalAlignment(SwingConstants.CENTER);
 
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.TRAILING)
        		.addGroup(layout.createSequentialGroup()
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(layout.createSequentialGroup()
        					.addContainerGap()
        					.addGroup(layout.createParallelGroup(Alignment.LEADING)
        						.addComponent(jTextFieldName, GroupLayout.PREFERRED_SIZE, 132, GroupLayout.PREFERRED_SIZE)
        						.addGroup(layout.createSequentialGroup()
        							.addGap(12)
        							.addGroup(layout.createParallelGroup(Alignment.LEADING)
        								.addComponent(jButtonBrowseImage)
        								.addGroup(layout.createSequentialGroup()
        									.addComponent(lblTipul, GroupLayout.PREFERRED_SIZE, 60, GroupLayout.PREFERRED_SIZE)
        									.addPreferredGap(ComponentPlacement.RELATED)
        									.addGroup(layout.createParallelGroup(Alignment.LEADING)
        										.addComponent(boxNatural, GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
        										.addComponent(buttonAranjament, GroupLayout.PREFERRED_SIZE, 104, GroupLayout.PREFERRED_SIZE)))
        								.addComponent(lblExterior, GroupLayout.PREFERRED_SIZE, 87, GroupLayout.PREFERRED_SIZE)))))
        				.addGroup(layout.createSequentialGroup()
        					.addGap(49)
        					.addComponent(jLabel1)))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(jLabelImage, GroupLayout.PREFERRED_SIZE, 146, GroupLayout.PREFERRED_SIZE)
        					.addGap(43)
        					.addComponent(jButton1, GroupLayout.PREFERRED_SIZE, 150, GroupLayout.PREFERRED_SIZE))
        				.addGroup(layout.createSequentialGroup()
        					.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        						.addComponent(lblSau, GroupLayout.PREFERRED_SIZE, 60, GroupLayout.PREFERRED_SIZE)
        						.addComponent(lblSau_1, GroupLayout.PREFERRED_SIZE, 60, GroupLayout.PREFERRED_SIZE))
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addGroup(layout.createParallelGroup(Alignment.LEADING)
        						.addComponent(buttonBuchet, GroupLayout.PREFERRED_SIZE, 81, GroupLayout.PREFERRED_SIZE)
        						.addComponent(boxArtificial)))
        				.addComponent(jComboBoxExteriors, GroupLayout.PREFERRED_SIZE, 116, GroupLayout.PREFERRED_SIZE))
        			.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        		.addGroup(layout.createSequentialGroup()
        			.addContainerGap(25, Short.MAX_VALUE)
        			.addComponent(label, GroupLayout.PREFERRED_SIZE, 475, GroupLayout.PREFERRED_SIZE)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(lblNewLabel, GroupLayout.PREFERRED_SIZE, 36, GroupLayout.PREFERRED_SIZE))
        		.addGroup(layout.createSequentialGroup()
        			.addContainerGap(14, Short.MAX_VALUE)
        			.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 517, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap())
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.TRAILING)
        		.addGroup(layout.createSequentialGroup()
        			.addGroup(layout.createParallelGroup(Alignment.LEADING, false)
        				.addComponent(label, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        				.addComponent(lblNewLabel, GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(layout.createSequentialGroup()
        					.addGap(9)
        					.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        						.addGroup(layout.createSequentialGroup()
        							.addComponent(jTextFieldName, GroupLayout.PREFERRED_SIZE, 30, GroupLayout.PREFERRED_SIZE)
        							.addGap(18)
        							.addComponent(jButtonBrowseImage)
        							.addGap(49))
        						.addGroup(layout.createSequentialGroup()
        							.addComponent(jLabelImage, GroupLayout.PREFERRED_SIZE, 138, GroupLayout.PREFERRED_SIZE)
        							.addPreferredGap(ComponentPlacement.RELATED)))
        					.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        						.addComponent(lblTipul)
        						.addComponent(buttonAranjament)
        						.addComponent(lblSau, GroupLayout.PREFERRED_SIZE, 25, GroupLayout.PREFERRED_SIZE)
        						.addComponent(buttonBuchet))
        					.addPreferredGap(ComponentPlacement.UNRELATED)
        					.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        						.addComponent(boxNatural)
        						.addComponent(boxArtificial)
        						.addComponent(lblSau_1, GroupLayout.PREFERRED_SIZE, 25, GroupLayout.PREFERRED_SIZE))
        					.addGap(35)
        					.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        						.addComponent(lblExterior, GroupLayout.PREFERRED_SIZE, 25, GroupLayout.PREFERRED_SIZE)
        						.addComponent(jComboBoxExteriors, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(jLabel1)
        					.addGap(49)
        					.addComponent(jButton1, GroupLayout.PREFERRED_SIZE, 49, GroupLayout.PREFERRED_SIZE)))
        			.addGap(18)
        			.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 251, GroupLayout.PREFERRED_SIZE)
        			.addGap(45))
        );
        getContentPane().setLayout(layout);
 
        pack();
        setLocationRelativeTo(null);
    }// &lt;/editor-fold&gt;                        
 
    private void jTextFieldNameActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
    }                                              
    DefaultTableModel model;
    String name = "";
    String tip1 = "";
    String tip2 = "";
    String Exterior = "";
    String selectedImagePath = "";
//    byte imageJtable = new Byte(1024);
 
//Adding table headers
    public void addTableHeader() {
        model = (DefaultTableModel) jTable1.getModel();
        Object[] newIdentifiers = new Object[]{"Nume", "Tipul", "Tipul", "Exterior", "Image"};
        model.setColumnIdentifiers(newIdentifiers);
        //Get Image column and override  TableCellRenderer class component method (getTableCellRendererComponent)
        jTable1.getColumn("Image").setCellRenderer(new myTableCellRenderer());
         
    }
     
    class myTableCellRenderer implements TableCellRenderer {
         
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
 
//            Change Image column minimum width and maximum width
            TableColumn tb = jTable1.getColumn("Image");
            tb.setMaxWidth(60);
            tb.setMinWidth(60);
            jTable1.setRowHeight(60);
            return (Component) value;
             
        }
         
    }
     
 
    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {                                      
        // TODO add your handling code here:
 
    }                                     
 
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        name = jTextFieldName.getText();
        if (buttonAranjament.isSelected()) {
            tip1 = "Aranjament";
        } else if (buttonBuchet.isSelected()) {
            tip1 = "Buchet";
        }
         
        if (boxNatural.isSelected()) {
            tip2 = "Natural";
        } else if (boxArtificial.isSelected()) {
            tip2 = "Artificial";
        }
         
        Exterior = jComboBoxExteriors.getSelectedItem().toString();
         
        JLabel imageLabel = new JLabel();
        ImageIcon imageicon = new ImageIcon(selectedImagePath);
        //Resize image to fixed dimensions 60 * 60 (width and height).
        Image imageIc = imageicon.getImage().getScaledInstance(60, 60, Image.SCALE_SMOOTH);
        //Storing imageicon in a jlabel
        imageLabel.setIcon(new ImageIcon(imageIc));
 
        //Checking if one or more field is empty
        if (name.isEmpty() || tip1.isEmpty() || tip2.isEmpty() || Exterior.isEmpty()) {
            JOptionPane.showMessageDialog(null, "One Or More Fields Are Empty");
        } else {
//            JOptionPane.showMessageDialog(null, "All Fields are filled");
            //Adding entered data to jtable
 
            model.addRow(new Object[]{name, tip1, tip2, Exterior, imageLabel});
            JOptionPane.showMessageDialog(null, "Data Inserted");
            //clear fields after inserting the data
            clearFields();
        }
 
    }                                        
 
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {                                     
        // TODO add your handling code here:      
//        Display data from jtable in input fields
        int selectedRow = jTable1.getSelectedRow();
         
        jTextFieldName.setText(model.getValueAt(selectedRow, 0).toString());
        String tabletip1 = model.getValueAt(selectedRow, 1).toString();
        if (tabletip1.equals("Aranjament")) {
            buttonAranjament.setSelected(true);
        } else if (tabletip1.equals("Buchet")) {
            buttonBuchet.setSelected(true);
        }
        String checkPLanguage = model.getValueAt(selectedRow, 2).toString();
         
        if (checkPLanguage.equals("Natural")) {
            boxNatural.setSelected(true);
        } else if (checkPLanguage.equals("Artificial")) {
            boxArtificial.setSelected(true);
        }
         
        String comboSub = model.getValueAt(selectedRow, 3).toString();
        for (int i = 0; i < jComboBoxExteriors.getItemCount(); i++) {
            if (jComboBoxExteriors.getItemAt(i).toString().equalsIgnoreCase(comboSub)) {
                jComboBoxExteriors.setSelectedIndex(i);
            }
        }
        JLabel labJT = (JLabel) model.getValueAt(selectedRow, 4);        
        ImageIcon iconImage = (ImageIcon) labJT.getIcon();
        System.out.println("Returns " + labJT.getIcon());
        Image imgJL = iconImage.getImage().getScaledInstance(jLabelImage.getWidth(), jLabelImage.getHeight(), Image.SCALE_SMOOTH);
        jLabelImage.setIcon(new ImageIcon(imgJL));
 
    }                                    
 
    private void jButtonBrowseImageActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        // TODO add your handling code here:
//        Setting default browser location
        JFileChooser browseImageFile = new JFileChooser("C:\\Users\\Public\\Pictures\\Sample Pictures");
        //Filter image extensions
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("IMAGES", "png", "jpg", "jpeg");
        browseImageFile.addChoosableFileFilter(fnef);
        int showOpenDialogue = browseImageFile.showOpenDialog(null);
         
        if (showOpenDialogue == JFileChooser.APPROVE_OPTION) {
            File selectedImageFile = browseImageFile.getSelectedFile();
            selectedImagePath = selectedImageFile.getAbsolutePath();
            JOptionPane.showMessageDialog(null, selectedImagePath);
            //Display image on jlable
            ImageIcon ii = new ImageIcon(selectedImagePath);
//            Resize image to fit jlabel
            Image image = ii.getImage().getScaledInstance(jLabelImage.getWidth(), jLabelImage.getHeight(), Image.SCALE_SMOOTH);
             
            jLabelImage.setIcon(new ImageIcon(image));
        }
    }                                                  
 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //&lt;editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) "&gt;
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FlowInt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FlowInt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FlowInt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FlowInt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //&lt;/editor-fold&gt;
 
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FlowInt().setVisible(true);
            }
        });
    }
 
    // Variables declaration - do not modify                     
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonBrowseImage;
    private javax.swing.JCheckBox boxNatural;
    private javax.swing.JCheckBox boxArtificial;
    private javax.swing.JComboBox jComboBoxExteriors;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelImage;
    private javax.swing.JRadioButton buttonBuchet;
    private javax.swing.JRadioButton buttonAranjament;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldName;
    private JLabel lblTipul;
    private JLabel lblNewLabel;
    private JLabel label;
    // End of variables declaration                   
 
    private void clearFields() {
        jTextFieldName.setText("");
        buttonGroup1.clearSelection();
        buttonGroup2.clearSelection();
        jComboBoxExteriors.setSelectedIndex(0);
    }
}